AC_INIT(configure.in)

VERSION=0.0.1
PACKAGE=housebuilder

AM_CONFIG_HEADER(config.h)

AM_INIT_AUTOMAKE($PACKAGE, $VERSION, no-define)
AC_SUBST(VERSION)

AC_PROG_CC
AM_PROG_CC_C_O

AM_PATH_GLIB_2_0(2.4.0,,AC_MSG_ERROR([GLib >= 2.4.0 is required]))
AM_PATH_GTK_2_0(2.4.0,,AC_MSG_ERROR([GTK+ >= 2.4.0 is required]))

PKG_CHECK_MODULES(CAIRO, cairo >= 1.4.0 cairo-svg >= 1.4.0,,
	AC_MSG_ERROR([Cairo/Cairo-SVG >= 1.4 is required]))

PKG_CHECK_MODULES(RSVG, librsvg-2.0 >= 2.14,,
	AC_MSG_ERROR([librsvg >= 2.14 is required]))

AM_PATH_GTKGLEXT_1_0(1.0.0,,AC_MSG_ERROR([GtkGlExt >= 1.0.0 is required]))

PKG_CHECK_MODULES(LIBG3D, libg3d >= 0.0.6,,
	AC_MSG_ERROR([libg3d >= 0.0.6 is required]))

# Check OpenGL stuff
AC_PATH_XTRA

ac_save_CPPFLAGS="$CPPFLAGS"
CPPFLAGS="$CPPFLAGS $X_CFLAGS"
ac_save_LIBS="$LIBS"
LIBS="$LIBS $X_LIBS"

AC_CHECK_HEADERS(GL/gl.h GL/glu.h,,
	AC_MSG_ERROR([some OpenGL headers missing]),
	[#include <GL/gl.h>])

AC_CHECK_LIB(GL, glBegin, have_gl=yes, have_gl=no)
AC_CHECK_LIB(GLU, gluPerspective, have_glu=yes, have_glu=no, -lGL $GTK_LIBS)

if test $have_gl = no || test $have_glu = no; then
	AC_MSG_ERROR([libgl or libglu missing])
else
	GL_LIBS="-lGL -lGLU $GTK_LIBS"
	AC_SUBST(GL_LIBS)
fi

# Debug level (verbosity & optimization)
AC_MSG_CHECKING([for debug level])
AC_ARG_ENABLE(debug,
	[[  --enable-debug[=LVL]    enable debug level LVL or 1 (default is 0)]],
	[if test "$enableval" = "yes" ; then DEBUG=1; else DEBUG=$enableval; fi],
	DEBUG=0)
AC_MSG_RESULT($DEBUG)
AC_SUBST(DEBUG)

if test "$DEBUG" = "0"; then
	DBG_CFLAGS="-O2"
else
	DBG_CFLAGS="-g -O0"
fi
AC_SUBST(DBG_CFLAGS)

AC_DEFINE_DIR(DATA_DIR, datadir/$PACKAGE, [Data directory])

AC_OUTPUT(Makefile
	housebuilder.desktop
	m4/Makefile
	data/Makefile
	data/icons/Makefile
	data/textures/Makefile
	src/Makefile
)
